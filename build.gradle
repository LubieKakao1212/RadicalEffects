plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

//Load Access Properties (ghReadPAT, ghUsr)
ext.accessProps = new Properties()
var propsFile = file("access.properties")
if(propsFile.exists()) {
	propsFile.withInputStream {
		accessProps.load(it)
	}
}


base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "GitHubPackages QuLib"
		url = uri("https://maven.pkg.github.com/LubieKakao1212/qulib-kt")
		credentials {
			username = accessProps.ghUsr ?: System.getenv("USERNAME")
			password = accessProps.ghReadPAT ?: System.getenv("TOKEN")
		}
	}

	maven { url 'https://maven.wispforest.io' }

	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"radical-effects" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Energy
	include modApi('teamreborn:energy:3.0.0')

	//testing mods
	modRuntimeOnly('TechReborn:TechReborn-1.19:5.7.0') { transitive = false }
	modRuntimeOnly('RebornCore:RebornCore-1.19:5.7.0') { transitive = false }

	//QuLib
	modImplementation "com.LubieKakao1212.qulib:qulib-kt-fabric-${minecraft_version}:${qulib_version}"

	//owo
	modImplementation "io.wispforest:owo-lib:${project.owo_version}+${project.minecraft_version}"
	annotationProcessor "io.wispforest:owo-lib:${project.owo_version}+${project.minecraft_version}"

	//ModMenu
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}